generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Status {
  unread
  reading
  read
}

model Group {
  id        String   @id @default(cuid())
  userId    String
  name      String
  books     Book[]
  default   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Book {
  id          String   @id @default(cuid())
  userId      String
  groupId     String
  authorId    String
  title       String
  description String
  group       Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  author      Author   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  genres      Genre[]
  status      Status   @default(unread)
  favorite    Boolean  @default(false)
  notes       Note[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Genre {
  id        String   @id @default(cuid())
  userId    String
  name      String
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Author {
  id        String   @id @default(cuid())
  userId    String
  name      String
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id        String   @id @default(cuid())
  userId    String
  bookId    String
  content   String
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
